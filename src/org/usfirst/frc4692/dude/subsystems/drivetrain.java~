// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4692.dude.subsystems;

import org.usfirst.frc4692.dude.RobotMap;
//import org.usfirst.frc4692.dude.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
//import edu.wpi.first.wpilibj.TalonSRX;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class drivetrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController rightdrive = RobotMap.drivetrainrightdrive;
    private final SpeedController leftdrive = RobotMap.drivetrainleftdrive;
    private final RobotDrive robotDrive21 = RobotMap.drivetrainRobotDrive21;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    }
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    
public void takeJoystickInputs(Joystick joystick1, Joystick joystick2) {
	robotDrive21.tankDrive(joystick1, joystick2);
}
    public void driveStraight(double d) {
    	robotDrive21.drive(3.0, 0.0);
    }
    	public void driveforward() {
    		robotDrive21.setLeftRightMotorOutputs(3.0, 3.0);
    	}

		public SpeedController getRightdrive() {
			return rightdrive;
		}

		public SpeedController getLeftdrive() {
			return leftdrive;
		}
}
